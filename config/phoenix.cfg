[buildout]

parts +=
    phoenix
    phoenix_python
    phoenix_config
    phoenix_gunicorn
    phoenix_supervisor
    phoenix_nginx
    phoenix_deploy
    phoenix_nose   

[phoenix]
recipe = z3c.recipe.scripts
eggs = 
    Phoenix
    OWSLib
    authomatic

[phoenix_python]
recipe = z3c.recipe.scripts
eggs =
    Sphinx
    sphinx_bootstrap_theme
    ${phoenix:eggs} 
interpreter = python

[phoenix_config]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/phoenix.ini
output = ${buildout:anaconda-home}/etc/phoenix.ini

socket = ${buildout:anaconda-home}/var/run/phoenix.socket

[phoenix_gunicorn]
recipe = zc.recipe.egg
eggs =
    gunicorn
    paste
    ${phoenix:eggs}
scripts =
    gunicorn_paster=gunicorn_paster

[phoenix_supervisor]
recipe = birdhousebuilder.recipe.supervisor

program = phoenix
command = ${buildout:bin-directory}/gunicorn_paster --bind=unix://${phoenix_config:socket} --workers=2 ${phoenix_config:output} 
environment = PYTHON_EGG_CACHE="${buildout:anaconda-home}/var/tmp"

[phoenix_nginx]
recipe = birdhousebuilder.recipe.nginx
input = ${buildout:directory}/templates/nginx-phoenix.conf
ssl_subject = /C=DE/ST=Hamburg/L=Hamburg/O=Phoenix/CN=${server:hostname}
ssl_overwrite = false
sites = phoenix

socket = ${phoenix_config:socket}
hostname =  ${server:hostname}
https = ${ports:https}
http = ${ports:http}
esg_search = ${esgf:esg_search}
ipython = ${ports:ipython}
doc_root = ${buildout:directory}

[phoenix_deploy]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    mkdir -p ${buildout:anaconda-home}/var/log/phoenix
    mkdir -p ${buildout:anaconda-home}/var/tmp
    mkdir -p ${buildout:anaconda-home}/var/run

[phoenix_nose]
recipe = z3c.recipe.scripts
eggs =
    nose
    ${phoenix:eggs}
entry-points =
    nosetests=nose:run_exit
scripts =
    nosetests=nosetests
