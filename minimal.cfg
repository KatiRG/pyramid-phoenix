[buildout]

extends = versions.cfg

develop = .

# buildout options
show-picked-versions = true
newest = false
download-cache = downloads
log-level = INFO

## extensions

# use python site-packages
# https://pypi.python.org/pypi/buildout.locallib/ 
extensions = buildout.locallib

parts =
    conda
    phoenix
    phoenix_config
    gunicorn
    supervisor
    nginx
    celery

[settings]
hostname = localhost
http-port = 8081
https-port = 8443
user = 
project = Phoenix
version = 0.4.7
phoenix-secret = f4e044d933767d6d0e022d1020508db3
phoenix-password = 
log-level = ${buildout:log-level}
storage_dir = ${buildout:prefix}/var/lib/storage
supervisor-url = http://localhost:9001
mongodb-host = localhost
mongodb-port = 27027
phoenix-flower = false
flower-host = localhost
flower-port = 5555
flower-url = http://${:flower-host}:${:flower-port}
phoenix-wms = false
wms-host = ${:hostname}
wms-port = 8080
wms-url = http://${:wms-host}:${:wms-port}/ncWMS2
phoenix-solr = false
solr-host = ${:hostname}
solr-port = 8983
solr-url = http://${:solr-host}:${:solr-port}/solr/birdhouse
phoenix-redis = false
redis-host = localhost
redis-port = 6379
redis-url = redis://${:redis-host}:${:redis-port}/0
phoenix-csw = false
csw-host = ${:hostname}
csw-port = 8082
csw-url = http://${:csw-host}:${:csw-port}/csw
phoenix-wizard = true
wps-host = ${:hostname}
wps-port = 8091
wps-url = http://${:wps-host}:${:wps-port}/wps
esgf-search-url = http://136.172.30.96/esg-search
swift-auth-url = http://localhost/auth/v1.0
swift-auth-version = 1
github-consumer-key = '#######'
github-consumer-secret = '######'
ceda-consumer-key = '#######'
ceda-consumer-secret = '######'
ceda-consumer-redirect-uri = https://${:hostname}/account/auth/ceda

[conda]
recipe = birdhousebuilder.recipe.conda
channels = birdhouse
pkgs = 
#        pyramid
#        pyramid_chameleon
#        pyramid_mako
#        pyramid_celery
#        repoze.sendmail
        celery=3.1.19
        kombu=3.0.32
        gunicorn
        gevent
        lxml
        mako 
        dateutil 
        requests 
        pyyaml
        pygments 
        owslib>=0.11.2
        pymongo=3
        pyopenssl
        pytz
        python-swiftclient
        threddsclient       
        python-ldap
        bird-feeder
        pywps>=3.2.5
 
[phoenix]
recipe = zc.recipe.egg
eggs = 
    Phoenix
extra-paths = 
    ${buildout:prefix}/etc/celery
interpreter = python

[phoenix_config]
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/templates/phoenix.ini
output = ${buildout:prefix}/etc/phoenix.ini

# generate secret
# python -c "import os; print(''.join('%02x' % ord(x) for x in os.urandom(16)))"
prefix = ${buildout:prefix}
# gunicorn service
socket = ${buildout:prefix}/var/run/phoenix.socket
workers = 3
worker_class = gevent
timeout = 30
# upload storage
upload_dir = ${settings:storage_dir}/phoenix/uploads
max_file_size = 1024

[gunicorn]
recipe = zc.recipe.egg
eggs =
    gunicorn
    ${phoenix:eggs}
extra-paths = 
    ${buildout:prefix}/etc/celery
scripts =
    gunicorn=gunicorn

[supervisor]
recipe = birdhousebuilder.recipe.supervisor

user = ${settings:user}
program = phoenix
command = ${buildout:bin-directory}/gunicorn --paste ${phoenix_config:output}

[nginx]
recipe = birdhousebuilder.recipe.nginx
input = ${buildout:directory}/templates/nginx.conf
sites = phoenix

user = ${settings:user}
socket = ${phoenix_config:socket}
hostname =  ${settings:hostname}
http_port = ${settings:http-port}
https_port = ${settings:https-port}
esgf_search_url = ${settings:esgf-search-url}
client_max_body_size = ${phoenix_config:max_file_size}m
upload_dir = ${phoenix_config:upload_dir}          

[celery]
recipe = birdhousebuilder.recipe.celery
user = ${settings:user}
app = pyramid_celery.celery_app --ini ${phoenix_config:output}
eggs = ${phoenix:eggs}
use-monitor = ${settings:phoenix-flower}
#celeryd-concurrency = 1
use-celeryconfig = true
broker-url = mongodb://${settings:mongodb-host}:${settings:mongodb-port}/celery
celery-result-backend = mongodb://${settings:mongodb-host}:${settings:mongodb-port}
celery-mongodb-backend-settings = {'database': 'celery', 'taskmeta_collection': 'celery_taskmeta',}






