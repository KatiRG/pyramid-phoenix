imports:

- classpath:/common/directors.yaml
- classpath:/common/groovy/actors.yaml
- classpath:/common/python/actors.yaml

components:


# actors
# ------

- id: ExecuteWPSProcess
  type: PythonActor
  properties:
    step: |
      import sys
      sys.path.append(sys_path)
      from owslib.wps import WebProcessingService, monitorExecution
      wps = WebProcessingService(service, verbose=False)
      inputs = [("file_url", file_url)]
      outputs = [("output",True)]
      inputs.extend(input_params)
      inputs = map(lambda(val): (val[0], str(val[1])), inputs)
      execution = wps.execute(identifier, inputs=inputs, output=outputs)
      monitorExecution(execution)
      status = execution.status
      output = execution.processOutputs[0].reference
    inputs:
      sys_path:
      identifier: 
      service:
      file_url:
        type: String
      input_params:
        type: Collection
    outputs:
      status: 
      output:


- id: ExecuteEsgfWPS
  type: PythonActor
  properties:
    step: |
      import sys
      sys.path.append(sys_path)
      from owslib.wps import WebProcessingService, monitorExecution
      wps = WebProcessingService(service, verbose=False)
      inputs = [("openid", openid), ("password", password), ("file_url", file_url)]
      outputs = [("output",True)]
      execution = wps.execute(identifier, inputs=inputs, output=outputs)
      # TODO: fix delay of copying output file ...
      monitorExecution(execution, sleepSecs=20)
      status = execution.status
      output = execution.processOutputs[0].reference
    inputs:
      sys_path: 
      identifier: 
      service:
      openid:
      password:
      file_url:
    outputs:
      status:
      output:  

# workflow
# --------

- id: ESGFWorkflow
  type: Workflow
  properties:
    director: !ref MTDataDrivenDirector
    nodes:
    - !ref DownloadEsgfFile
    - !ref RunProcess
    - !ref RenderResult

- id: DownloadEsgfFile
  type: Node
  properties:
    actor: !ref ExecuteEsgfWPS
    constants:
      sys_path: ${sys_path}
      service: ${service}
      identifier: ${data_source}
      openid: ${openid}
      password: ${password}
      file_url: ${file_url}
    outflows:
      status: /wps/esgf/download/status/
      output: /wps/esgf/download/file_url/

- id: RunProcess
  type: Node
  properties:
    actor: !ref ExecuteWPSProcess
    constants:
      sys_path: ${sys_path}
      service: ${service}
      identifier: ${process}
      input_params: ${params}
    inflows:
      file_url: /wps/esgf/download/file_url
    outflows:
      status: /wps/process/status/
      output: /wps/process/output/  
 
- id: RenderResult
  type: Node
  properties:
    actor: !ref PrintStreamWriter
    inflows:
      message: /wps/process/status/

