imports:

- classpath:/common/directors.yaml
- classpath:/common/groovy/actors.yaml
- classpath:/common/python/actors.yaml

components:

# actors
# ------

- id: ExecuteWPSProcess
  type: PythonActor
  properties:
    step: |
      import sys
      sys.path.append(sys_path)
      from owslib.wps import WebProcessingService, monitorExecution
      wps = WebProcessingService(service, verbose=False)
      inputs = []
      if openid != None:
        inputs.append( ("openid", openid) )
      if password != None:
        inputs.append( ("password", password) )
      if file_url != None:
        inputs.append( ("file_url", file_url) )
      outputs = [("output", True)]
      if input_params != None:
        input_params = map(lambda(val): (val[0], str(val[1])), input_params)
        inputs.extend(input_params)
      execution = wps.execute(identifier, inputs=inputs, output=outputs)
      monitorExecution(execution)
      status = execution.status
      output = execution.processOutputs[0].reference
    inputs:
      sys_path:
      identifier: 
      service:
      openid:
        type: String
        optional: true
        nullable: true
      password:
        type: String
        optional: true
        nullable: true
      file_url:
        type: String
        optional: true
        nullable: true
      input_params:
        type: Collection
        optional: true
        nullable: true
    outputs:
      status: 
      output:


# workflow
# --------

- id: SimpleProcessing
  type: Workflow
  properties:
    director: !ref MTDataDrivenDirector
    nodes:
    - !ref DownloadData
    - !ref RunDataProcessing
    - !ref RenderResult

- id: DownloadData
  type: Node
  properties:
    actor: !ref ExecuteWPSProcess
    constants:
      sys_path: ${sys_path}
      service: ${service}
      identifier: ${download_process}
      openid: ${openid}
      password: ${password}
      file_url: ${file_url}
      input_params: ${download_params}
    outflows:
      status: /wps/download/status/
      output: /wps/download/file_url/

- id: RunDataProcessing
  type: Node
  properties:
    actor: !ref ExecuteWPSProcess
    constants:
      sys_path: ${sys_path}
      service: ${service}
      identifier: ${work_process}
      input_params: ${work_params}
    inflows:
      file_url: /wps/download/file_url
    outflows:
      status: /wps/work/status/
      output: /wps/work/output/  
 
- id: RenderResult
  type: Node
  properties:
    actor: !ref PrintStreamWriter
    inflows:
      message: /wps/work/status/

